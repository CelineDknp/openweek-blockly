accessible: true
author: ''
context: ''
environment: default
evaluate: best
groups: false
limits:
    output: '2'
    time: '30'
    memory: '100'
name: ''
network_grading: false
problems:
    q1:
        language: python
        options:
            oneBasedIndex: true
            sounds: true
            css: true
            media: /static/common/js/blockly/media/
            scrollbars: true
            toolboxPosition: start
            maxBlocks: Infinity
            trashcan: true
        name: trouver le minimum d'une liste
        type: blockly
        blocks_files:
        - blocks.js
        workspace: |-
            <xml xmlns="http://www.w3.org/1999/xhtml" id="workspaceBlocks"
            style="display:none"></xml>
        toolbox: |-
            <xml xmlns="http://www.w3.org/1999/xhtml">
              <block type="tant_que"></block>
              <block type="controls_if"></block>
              <block type="variables_get">
                <field name="VAR">minim</field>
              </block>
              <block type="actual_liste"></block>
              <block type="init_minimum"></block>
              <block type="le_minimum"></block>
              <block type="liste"></block>
              <block type="compare_to"></block>
              <block type="procedures_defreturn">
                <mutation>
                  <arg name="liste"></arg>
                </mutation>
                <field name="NAME">minimum</field>
                <comment pinned="false" h="80" w="160">Décrire cette fonction…</comment>
              </block>
              <block type="variables_get">
                <field name="VAR">il y a des elements dans la liste</field>
              </block>
            </xml>
        header: |
            Vous devez créer une fonction qui retourne l'élément le plus petit d'une liste passée en paramètre. \n
            Pour rappel une liste est une suite de nombre. Par exemple:
            [1, 2, 3] où [4,5,8,2]. \n
            Dans ces deux exemples, votre programme doit retourner 1 et 2
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
