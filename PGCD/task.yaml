accessible: true
author: Robin Descamps
context: Calculer le PGCD (https://fr.wikipedia.org/wiki/Plus_grand_commun_diviseur)
    de deux nombres entiers positifs.
environment: java8scala
evaluate: best
groups: false
limits:
    time: '3'
    memory: '100'
    output: '2'
name: PGCD de deux nombres
network_grading: false
problems:
    PGCD:
        header: |-
            Complétez la fonction ``pgcd``, qui prend deux arguments entiers positifs : ``nombre_1`` et ``nombre_2``. Votre fonction doit calculer le Plus Grand Commun Diviseur (PGCD) de ces deux nombres.

            - Les blocs déjà placés ne doivent normalement pas être déplacés ou supprimés, mais ils peuvent être édités (une égalité peut être changé en inégalité, ...).
            - Tous les blocs proposés doivent normalement être utilisés.
        workspace: |-
            <xml xmlns="http://www.w3.org/1999/xhtml">
              <block type="procedures_defreturn" deletable="false">
                <mutation>
                  <arg name="nombre_1"></arg>
                  <arg name="nombre_2"></arg>
                </mutation>
                <field name="NAME">pgcd</field>
                <comment pinned="false" h="80" w="160">Décrire cette fonction…</comment>
                <statement name="STACK">
                  <block type="controls_if" deletable="false">
                    <mutation else="1"></mutation>
                    <value name="IF0">
                      <block type="logic_compare">
                        <field name="OP">EQ</field>
                        <value name="A">
                          <block type="variables_get">
                            <field name="VAR">nombre_1</field>
                          </block>
                        </value>
                        <value name="B">
                          <block type="math_number">
                            <field name="NUM">0</field>
                          </block>
                        </value>
                      </block>
                    </value>
                    <statement name="DO0">
                      <block type="variables_set">
                        <field name="VAR">resultat</field>
                        <value name="VALUE">
                          <block type="variables_get">
                            <field name="VAR">nombre_2</field>
                          </block>
                        </value>
                      </block>
                    </statement>
                    <statement name="ELSE">
                      <block type="controls_whileUntil" deletable="false">
                        <field name="MODE">WHILE</field>
                        <value name="BOOL">
                          <block type="logic_compare">
                            <field name="OP">EQ</field>
                          </block>
                        </value>
                        <statement name="DO">
                          <block type="controls_if" deletable="false">
                            <mutation else="1"></mutation>
                            <value name="IF0">
                              <block type="logic_compare">
                                <field name="OP">EQ</field>
                              </block>
                            </value>
                          </block>
                        </statement>
                      </block>
                    </statement>
                    <next>
                      <block type="variables_set">
                        <field name="VAR">resultat</field>
                      </block>
                    </next>
                  </block>
                </statement>
                <value name="RETURN">
                  <block type="variables_get" deletable="false" movable="false" editable="false">
                    <field name="VAR">resultat</field>
                  </block>
                </value>
              </block>
            </xml>
        options:
            zoom:
                scaleSpeed: 1.2
                maxScale: 3.0
                minScale: 0.3
                controls: true
                startScale: 1.0
                wheel: false
            toolboxPosition: start
            media: /static/common/js/blockly/media/
            oneBasedIndex: true
            trashcan: true
            scrollbars: true
            css: true
            sounds: true
            maxBlocks: Infinity
        type: blockly
        language: python
        name: La fonction pgcd(nombre_1, nombre_2)
        toolbox: |-
            <xml xmlns="http://www.w3.org/1999/xhtml">
              <block type="math_number">
                <field name="NUM">0</field>
              </block>
              <block type="variables_set">
                <field name="VAR">resultat</field>
              </block>
              <block type="variables_get">
                <field name="VAR">nombre_1</field>
              </block>
              <block type="variables_set">
                <field name="VAR">nombre_1</field>
              </block>
              <block type="variables_get">
                <field name="VAR">nombre_2</field>
              </block>
              <block type="variables_set">
                <field name="VAR">nombre_2</field>
              </block>
              <block type="math_arithmetic">
                <field name="OP">ADD</field>
                <value name="A">
                  <shadow type="math_number">
                    <field name="NUM">0</field>
                  </shadow>
                </value>
                <value name="B">
                  <shadow type="math_number">
                    <field name="NUM">0</field>
                  </shadow>
                </value>
              </block>
            </xml>
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
